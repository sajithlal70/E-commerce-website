<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Wallet - Dent Kart</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.min.js"></script>
</head>
<body class="bg-gray-100">
    <%- include('../../views/partials/user/header') %>
    <!-- Breadcrumb -->
    <div class="container-fluid">
        <div class="row px-xl-5">
            <div class="col-12">
                <nav class="breadcrumb bg-light mb-30">
                    <a class="breadcrumb-item text-dark" href="/">Home</a>
                    <a class="breadcrumb-item text-dark" href="/profile">Profile</a>
                    <span class="breadcrumb-item active">Wallet</span>
                </nav>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <main class="w-full grid grid-cols-12 gap-6 animate__animated animate__fadeIn px-4 sm:px-6 lg:px-8">
        <!-- Include Profile Sidebar -->
        <%- include("../partials/user/profileSidebar", { currentPage: 'wallet' }) %>

        <!-- Wallet Content -->
        <div class="col-span-9 space-y-6">
            <!-- User Info Section -->
            <div class="bg-white rounded-lg shadow p-6 mb-6">
                <div class="flex justify-between items-center">
                    <div>
                        <h1 class="text-2xl font-bold text-gray-800">Welcome, <%= user.name %></h1>
                        <p class="text-gray-600">Wallet ID: <%= wallet.walletId %></p>
                    </div>
                    <div class="text-gray-600">
                        <i class="fas fa-user-circle text-yellow-600 group-hover:text-yellow-800 text-4xl"></i>
                    </div>
                </div>
            </div>

            <!-- Wallet Content -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                <!-- Balance Card -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold mb-4">Wallet Balance</h2>
                    <div class="text-3xl font-bold text-gray-800">₹ <span id="balance"><%= wallet.balance.toFixed(2) %></span></div>
                    <div class="flex space-x-3 mt-4">
                        <button onclick="showAddMoneyModal()" class="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600 transition flex-1">
                            <i class="fas fa-plus-circle mr-2"></i>Add Money
                        </button>
                        <button onclick="showWithdrawModal()" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition flex-1">
                            <i class="fas fa-money-bill-wave mr-2"></i>Withdraw
                        </button>
                    </div>
                </div>

                <!-- Transaction History -->
                <div class="md:col-span-2 bg-white rounded-lg shadow p-6">
                    <h2 class="text-xl font-semibold mb-4">Transaction History</h2>
                    <div class="overflow-x-auto">
                        <table class="min-w-full bg-white">
                            <thead>
                                <tr class="bg-gray-100">
                                    <th class="px-6 py-3 text-left">Date</th>
                                    <th class="px-6 py-3 text-left">Description</th>
                                    <th class="px-6 py-3 text-left">Type</th>
                                    <th class="px-6 py-3 text-right">Amount</th>
                                    <th class="px-6 py-3 text-right">Balance</th>
                                    <th class="px-6 py-3 text-center">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% transactions.forEach(transaction => { %>
                                    <tr class="border-b hover:bg-gray-50">
                                        <td class="px-6 py-4">
                                            <%= new Date(transaction.createdAt).toLocaleString() %>
                                        </td>
                                        <td class="px-6 py-4"><%= transaction.description %></td>
                                        <td class="px-6 py-4">
                                            <span class="<%= transaction.type === 'credit' ? 'text-green-600' : 'text-red-600' %>">
                                                <%= transaction.type.charAt(0).toUpperCase() + transaction.type.slice(1) %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 text-right">
                                            <span class="<%= transaction.type === 'credit' ? 'text-green-600' : 'text-red-600' %>">
                                                <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                                            </span>
                                        </td>
                                        <td class="px-6 py-4 text-right">
                                            ₹<%= (transaction.balance || 0).toFixed(2) %>
                                        </td>
                                        <td class="px-6 py-4 text-center">
                                            <span class="px-2 py-1 rounded-full text-xs
                                                <%= transaction.status === 'success' ? 'bg-green-100 text-green-800' : 
                                                    transaction.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : 
                                                    'bg-red-100 text-red-800' %>">
                                                <%= transaction.status.charAt(0).toUpperCase() + transaction.status.slice(1) %>
                                            </span>
                                        </td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Add Money Modal -->
    <div id="addMoneyModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center">
        <!-- Modal content -->
    </div>

    <!-- Withdraw Modal -->
    <div id="withdrawModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center">
        <!-- Modal content -->
    </div>

    <script>
    async function handleAddMoney() {
        const { value: amount } = await Swal.fire({
            title: 'Add Money to Wallet',
            input: 'number',
            inputLabel: 'Enter amount to add (₹)',
            inputPlaceholder: 'Enter amount',
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'Please enter an amount!';
                }
                if (value <= 0) {
                    return 'Amount must be greater than 0!';
                }
            }
        });

        if (amount) {
            try {
                const response = await fetch('/wallet/add-money', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ amount: parseFloat(amount) })
                });

                const data = await response.json();
                if (data.success) {
                    document.getElementById('balance').textContent = data.balance.toFixed(2);
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: `Successfully added ₹${amount} to your wallet`,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    location.reload();
                } else {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: data.message || 'Error processing request'
                    });
                }
            } catch (error) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Something went wrong! Please try again.'
                });
            }
        }
    }

    async function handleWithdraw() {
        const { value: amount } = await Swal.fire({
            title: 'Withdraw Money',
            input: 'number',
            inputLabel: 'Enter amount to withdraw (₹)',
            inputPlaceholder: 'Enter amount',
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'Please enter an amount!';
                }
                if (value <= 0) {
                    return 'Amount must be greater than 0!';
                }
                const currentBalance = parseFloat(document.getElementById('balance').textContent);
                if (value > currentBalance) {
                    return 'Insufficient balance!';
                }
            }
        });

        if (amount) {
            try {
                const response = await fetch('/wallet/withdraw', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ amount: parseFloat(amount) })
                });

                const data = await response.json();
                if (data.success) {
                    document.getElementById('balance').textContent = data.balance.toFixed(2);
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: `Successfully withdrawn ₹${amount} from your wallet`,
                        showConfirmButton: false,
                        timer: 1500
                    });
                    location.reload();
                } else {
                    await Swal.fire({
                        icon: 'error',
                        title: 'Withdrawal Failed',
                        text: data.message || 'Error processing withdrawal'
                    });
                }
            } catch (error) {
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Something went wrong! Please try again.'
                });
            }
        }
    }

    // Add a function to show loading state
    function showLoading(message = 'Processing...') {
        Swal.fire({
            title: message,
            allowOutsideClick: false,
            showConfirmButton: false,
            willOpen: () => {
                Swal.showLoading();
            }
        });
    }

    // Add error handler function
    async function handleError(error, customMessage = 'Something went wrong!') {
        console.error('Error:', error);
        await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: customMessage,
            confirmButtonColor: '#3085d6'
        });
    }

    // Add success handler function
    async function showSuccess(message) {
        await Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: message,
            showConfirmButton: false,
            timer: 1500
        });
    }
    </script>
    <%- include('../../views/partials/user/footer') %>