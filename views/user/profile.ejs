<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile Settings</title>
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Tailwind Animation Plugin -->
    <script src="https://cdn.jsdelivr.net/npm/tailwindcss-animatecss@1.0.7/dist/tailwindcss-animatecss.min.js"></script>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Add AOS Animation library -->
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <!-- Add Sweet Alert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .nav-item {
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        .nav-item::before {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 3px;
            background: linear-gradient(to right, #f59e0b, #d97706);
            transition: width 0.3s ease;
        }
        .nav-item:hover::before {
            width: 100%;
        }
        .nav-item:hover {
            transform: translateX(5px);
            background-color: rgba(245, 158, 11, 0.1);
        }
        .nav-item.active {
            background: linear-gradient(to right, #f59e0b, #d97706);
            color: white;
            box-shadow: 0 4px 6px rgba(245, 158, 11, 0.3);
        }
        .card-profile {
            transition: all 0.4s ease;
            perspective: 1000px;
        }
        .card:hover {
            transform: translateY(-10px) rotateX(5deg);
            box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        }
        .profile-avatar {
            transition: all 0.3s ease;
            animation: pulse 2s infinite;
        }
        .profile-avatar:hover {
            transform: scale(1.1) rotate(5deg);
        }
        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        .stat-card {
            transition: all 0.3s ease;
        }
        .stat-card:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        main {
            flex-grow: 1;
            padding-top: 2rem;
            padding-bottom: 2rem;
        }

        .input-error {
            border-color: #f87171;
            animation: shake 0.3s;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25%, 75% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
        }

        /* Enhanced animations and effects */
        .profile-card {
            background: linear-gradient(145deg, #ffffff, #f3f4f6);
            box-shadow: 20px 20px 60px #d1d1d1, -20px -20px 60px #ffffff;
            transition: all 0.5s ease;
        }

        .profile-card:hover {
            transform: translateY(-5px) scale(1.01);
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.4s ease;
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }

        .nav-item {
            background: linear-gradient(145deg, #ffffff, #f3f4f6);
            border-radius: 10px;
            transition: all 0.4s ease;
        }

        .nav-item:hover {
            background: linear-gradient(145deg, #f59e0b, #d97706);
            color: white;
            transform: translateX(10px);
        }

        .profile-avatar {
            position: relative;
            overflow: hidden;
        }

        .profile-avatar::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                45deg,
                transparent,
                rgba(255, 255, 255, 0.3),
                transparent
            );
            transform: rotate(45deg);
            animation: shine 3s infinite;
        }

        @keyframes shine {
            0% { transform: translateX(-100%) rotate(45deg); }
            100% { transform: translateX(100%) rotate(45deg); }
        }

        .input-group {
            position: relative;
            margin-bottom: 1.5rem;
        }

        .input-group input {
            background: transparent;
            border: 2px solid #f59e0b;
            border-radius: 8px;
            padding: 0.8rem 1rem;
            transition: all 0.3s ease;
            width: 100%;
        }

        .input-group input:focus {
            box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.3);
            outline: none;
        }

        .input-group label {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: white;
            padding: 0 0.5rem;
            color: #f59e0b;
            transition: all 0.3s ease;
        }

        .input-group input:focus + label,
        .input-group input:not(:placeholder-shown) + label {
            top: 0;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .save-btn {
            background: linear-gradient(45deg, #f59e0b, #d97706);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .save-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                90deg,
                transparent,
                rgba(255, 255, 255, 0.2),
                transparent
            );
            transition: 0.5s;
        }

        .save-btn:hover::before {
            left: 100%;
        }

        .loading {
            animation: pulse 1.5s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        /* Mobile-specific styles */
        @media (max-width: 768px) {
            .profile-card {
                padding: 1rem;
            }
            .profile-avatar {
                width: 100px !important;
                height: 100px !important;
                font-size: 2.5rem !important;
            }
            .address-security-grid {
                display: flex;
                flex-direction: column;
            }
            .address-security-grid > div {
                margin-bottom: 1rem;
            }
        }
    </style>
</head>

<body class="bg-gray-50">
  <%- include("../../views/partials/user/header") %>

    <!-- Breadcrumb Start -->
    <div class="container-fluid px-4">
        <div class="row">
            <div class="col-12">
                <nav class="breadcrumb bg-light mb-4 py-2 px-4 rounded">
                    <a class="breadcrumb-item text-dark" href="/">Home</a>
                    <span class="breadcrumb-item active">Profile</span>
                </nav>
            </div>
        </div>
    </div>
    <!-- Breadcrumb End -->

    <main class="w-full px-4 sm:px-6 lg:px-8 animate__animated animate__fadeIn">
        <div class="flex flex-col lg:flex-row w-full gap-6">
            <!-- Sidebar - Hidden on mobile, shown as dropdown -->
            <div class="lg:hidden w-full mb-6">
                <select id="mobileSidebarNav" class="w-full p-3 bg-white rounded-lg border border-yellow-500 focus:outline-none focus:border-yellow-600 text-yellow-800">
                    <option value="profile">Profile Settings</option>
                    <option value="orders">My Orders</option>
                    <option value="address">My Addresses</option>
                    <option value="wishlist">My Wishlist</option>
                    <option value="logout">Logout</option>
                </select>
            </div>

            <!-- Desktop Sidebar -->
            <div class="hidden lg:block lg:w-1/4 xl:w-1/5">
                <%- include("../partials/user/profileSidebar", { currentPage: 'profile' }) %>
            </div>

            <!-- Profile Content -->
            <div class="w-full max-w-5xl mx-auto space-y-6">
                <!-- Profile Card with enhanced styling -->
                <div class="profile-card rounded-2xl p-4 sm:p-6 md:p-8 bg-white shadow-lg" data-aos="fade-up" data-aos-delay="200">
                    <div class="flex flex-col md:flex-row gap-6">
                        <!-- Left Column with enhanced avatar -->
                        <div class="w-full md:w-auto flex flex-col items-center justify-start space-y-4">
                            <div class="profile-avatar w-32 h-32 sm:w-40 sm:h-40 rounded-full bg-gradient-to-r from-yellow-400 to-yellow-600 flex items-center justify-center text-white text-4xl sm:text-6xl relative overflow-hidden shadow-xl">
                                <i class="fas fa-user-astronaut"></i>
                            </div>
                            <h2 class="mt-4 text-xl sm:text-2xl font-bold bg-gradient-to-r from-yellow-600 to-yellow-400 bg-clip-text text-transparent text-center">
                                <%= user.name %>
                            </h2>
                            <p class="text-yellow-600 flex items-center text-center text-sm sm:text-base break-all">
                                <i class="fas fa-envelope mr-2"></i>
                                <%= user.email %>
                            </p>
                        </div>
            
                        <!-- Right Column with enhanced form -->
                        <div class="flex-1 flex flex-col">
                            <h3 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 pb-3 border-b-2 border-yellow-500 text-yellow-800 flex items-center">
                                <i class="fas fa-user-edit mr-2"></i>
                                Personal Information
                            </h3>
                            <form id="profileForm" class="space-y-4 sm:space-y-6 w-full">
                                <div class="input-group">
                                    <input type="text" name="name" value="<%= user.name %>" class="w-full px-3 sm:px-4 py-2 sm:py-3" placeholder=" ">
                                    <label class="text-xs sm:text-sm"><i class="fas fa-user mr-2"></i>Full Name</label>
                                </div>
                                <div class="input-group">
                                    <input type="email" name="email" value="<%= user.email %>" class="w-full px-3 sm:px-4 py-2 sm:py-3" placeholder=" ">
                                    <label class="text-xs sm:text-sm"><i class="fas fa-envelope mr-2"></i>Email Address</label>
                                </div>
                                <div class="input-group">
                                    <input type="tel" name="phone" value="<%= user.phone %>" class="w-full px-3 sm:px-4 py-2 sm:py-3" placeholder=" ">
                                    <label class="text-xs sm:text-sm"><i class="fas fa-phone mr-2"></i>Phone Number</label>
                                </div>
                                <button type="submit" class="save-btn w-full py-2 sm:py-3 px-4 sm:px-6 rounded-lg text-white font-semibold flex items-center justify-center space-x-2 hover:shadow-lg transform hover:scale-105 transition-all duration-300">
                                    <i class="fas fa-save mr-2"></i>
                                    <span>Save Changes</span>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                
                <!-- Address & Security Card -->
                <div class="address-security-grid grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
                    <div class="card bg-white rounded-2xl shadow-2xl p-4 sm:p-6 border-4 border-opacity-50">
                        <h3 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 pb-3 border-b-2 border-yellow-500 text-yellow-800 flex items-center">
                            <i class="fas fa-map-marker-alt mr-2 text-yellow-500"></i>
                            Shipping Address
                        </h3>
                        <div class="space-y-4">
                            <% if (addresses.defaultAddress) { %>
                                <!-- Render the default address -->
                                <% let iconClass = ''; %>
                                <% 
                                    if (addresses.defaultAddress.addressType === 'Home') {
                                        iconClass = 'fas fa-home text-yellow-500';
                                    } else if (addresses.defaultAddress.addressType === 'Office') {
                                        iconClass = 'fas fa-building text-blue-500';
                                    } else if (addresses.defaultAddress.addressType === 'Other') {
                                        iconClass = 'fas fa-map-marker-alt text-green-500';
                                    }
                                %>
            
                                <div class="flex items-center space-x-2 sm:space-x-4 p-2 sm:p-3 rounded-lg border border-yellow-200 bg-yellow-50">
                                    <i class="<%= iconClass %>"></i>
                                    <div class="text-sm sm:text-base">
                                        <p class="font-medium text-yellow-800"><%= addresses.defaultAddress.name %></p>
                                        <% if (addresses.defaultAddress.apartment) { %>
                                            <p class="text-yellow-600 text-sm"><%= addresses.defaultAddress.apartment %>, </p>
                                        <% } %>
                                        <p class="text-yellow-600 text-sm break-words">
                                            <%= addresses.defaultAddress.street %>, 
                                            <%= addresses.defaultAddress.city %>, 
                                            <%= addresses.defaultAddress.postalCode %>
                                        </p>
                                        <p class="text-yellow-600 text-sm">Phone: <%= addresses.defaultAddress.phone %></p>
                                    </div>
                                </div>
                            <% } else { %>
                                <!-- Message when no default address is set -->
                                <div class="text-center text-yellow-700">
                                    <p>No default address set</p>
                                </div>
                            <% } %>
                        
                            <!-- Link to view all addresses -->
                            <a href="/address" class="block mt-4">
                                <button class="bg-yellow-500 text-white px-4 py-2 rounded-lg hover:bg-yellow-600 transition-all duration-300 w-full text-sm sm:text-base">
                                    View All Addresses
                                </button>
                            </a>
                        </div>
                    </div>
                    
                    <div class="card bg-white rounded-2xl shadow-2xl p-4 sm:p-6 border-4 border-opacity-50">
                        <h3 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 pb-3 border-b-2 text-yellow-800 flex items-center">
                            <i class="fas fa-lock mr-2 text-yellow-500"></i>
                            Account Security
                        </h3>
                        <div class="space-y-4">
                            <div class="flex flex-col sm:flex-row justify-between sm:items-center p-2 sm:p-3 rounded-lg">
                                <div class="mb-3 sm:mb-0">
                                    <p class="font-medium text-yellow-800">Password</p>
                                    <p class="text-yellow-600 text-sm break-words">
                                        Update your password to keep your account secure.  
                                        If you are logged in with a Google account, please use the <a href="/forgot-password">"Forgot Password"</a> option.
                                    </p>
                                </div>
                                <a href="/getChangePassword" class="bg-yellow-500 text-white px-3 sm:px-4 py-2 rounded-lg hover:bg-yellow-600 transition-all duration-300 text-center text-sm sm:text-base">
                                    Change Password
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
               
    <script>
    AOS.init({
        duration: 800,
        easing: 'ease-in-out',
        once: true
    });

    // Mobile navigation handler
    document.getElementById('mobileSidebarNav').addEventListener('change', function() {
        const selectedPage = this.value;
        if (selectedPage === 'profile') {
            window.location.href = '/profile';
        } else if (selectedPage === 'orders') {
            window.location.href = '/orders';
        } else if (selectedPage === 'address') {
            window.location.href = '/address';
        } else if (selectedPage === 'wishlist') {
            window.location.href = '/wishlist';
        } else if (selectedPage === 'logout') {
            window.location.href = '/logout';
        }
    });

    document.getElementById('profileForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        // Select input values
        const nameInput = document.querySelector('input[name="name"]');
        const emailInput = document.querySelector('input[name="email"]');
        const phoneInput = document.querySelector('input[name="phone"]');

        const name = nameInput.value.trim();
        const email = emailInput.value.trim();
        const phone = phoneInput.value.trim();

        // Validation logic
        if (!name) {
            showError("Full Name is required", nameInput);
            return;
        }

        if (!validateEmail(email)) {
            showError("Please enter a valid email address", emailInput);
            return;
        }

        if (!validatePhone(phone)) {
            showError("Phone number must be 10 digits", phoneInput);
            return;
        }

        // API call if validations pass
        try {
            const response = await fetch('/updateProfile', {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name, email, phone })
            });

            const result = await response.json();
            if (result.success) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Profile updated successfully!',
                    icon: 'success',
                    confirmButtonColor: '#f59e0b',
                });
                
                // Update the displayed name and email
                const displayName = document.querySelector('.profile-card h2');
                const displayEmail = document.querySelector('.profile-card p.text-yellow-600');
                
                if (displayName) displayName.textContent = name;
                if (displayEmail) {
                    const emailIcon = displayEmail.querySelector('i');
                    displayEmail.textContent = '';
                    displayEmail.appendChild(emailIcon);
                    displayEmail.appendChild(document.createTextNode(' ' + email));
                }
            } else {
                showError(result.message || "Something went wrong.", nameInput);
            }
        } catch (error) {
            Swal.fire({
                title: 'Server Error!',
                text: 'Something went wrong. Please try again later.',
                icon: 'error',
            });
        }
    });

    // Helper functions remain unchanged
    function validateEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    }

    function validatePhone(phone) {
        const phoneRegex = /^[0-9]{10}$/;
        return phoneRegex.test(phone);
    }

    function showError(message, inputField) {
        Swal.fire({
            title: 'Error!',
            text: message,
            icon: 'error',
        }).then(() => {
            inputField.focus();
        });
    }

    // Enhanced Navigation Active State
    document.querySelectorAll('.nav-item').forEach(item => {
        item.addEventListener('click', function() {
            const activeItem = document.querySelector('.nav-item.active');
            if (activeItem) {
                activeItem.classList.remove('active');
            }
            this.classList.add('active');
        });
    });

    // Update mobile selector to match current page
    const mobileSidebarNav = document.getElementById('mobileSidebarNav');
    if (mobileSidebarNav) {
        mobileSidebarNav.value = 'profile';
    }
    </script>
<%- include("../../views/partials/user/footer") %>
</body>
</html>