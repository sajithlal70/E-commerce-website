<%- include("../../views/partials/user/header") %>
<!-- Navbar End -->

<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="/">Home</a>
                <a class="breadcrumb-item text-dark" href="/shop">Shop</a>
                <span class="breadcrumb-item active">Shop Detail</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->

<!-- Shop Detail Start -->
<div class="container-fluid pb-5">
    <div class="row px-xl-5">
        <div class="col-lg-5 mb-30">
            <div id="product-carousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner bg-light">
                    <% if(product.productImage && product.productImage.length > 0) { %>
                        <% product.productImage.forEach((image, index) => { %>
                            <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                                <div class="product-image-zoom-container">
                                    <div class="product-image-zoom">
                                        <img 
                                            src="/uploads/products/<%= image %>" 
                                            alt="<%= product.productName %> - Image <%= index + 1 %>" 
                                            class="product-image"
                                            data-zoom-src="/uploads/products/<%= image %>"
                                        >
                                    </div>
                                    <div class="product-image-magnifier"></div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="carousel-item active">
                            <div class="product-image-zoom-container">
                                <div class="product-image-zoom">
                                    <img 
                                        src="/images/placeholder.jpg" 
                                        alt="No image" 
                                        class="product-image"
                                        data-zoom-src="/images/placeholder.jpg"
                                    >
                                </div>
                                <div class="product-image-magnifier"></div>
                            </div>
                        </div>
                    <% } %>
                </div>
                <a class="carousel-control-prev" href="#product-carousel" data-slide="prev">
                    <i class="fa fa-2x fa-angle-left text-dark"></i>
                </a>
                <a class="carousel-control-next" href="#product-carousel" data-slide="next">
                    <i class="fa fa-2x fa-angle-right text-dark"></i>
                </a>
            </div>
        </div>

        <div class="col-lg-7 h-auto mb-30">
            <div class="h-100 bg-light p-30">
                <h3><%= product.productName %></h3>
                <div class="d-flex mb-3"></div>
                <h3 name="salePrice" class="font-weight-semi-bold mb-4">₹<%= product.salePrice %>/-</h3>
                <h4 style="text-decoration: line-through; text-decoration-color: red; font-size: 1rem; color: gray;">
                    ₹<%= product.regularPrice %>/-
                </h4>
                <p class="mb-4"><%= product.description || 'No description available' %></p>

                <div class="d-flex align-items-center mb-4 pt-2">
                    <div class="input-group quantity mr-3" style="width: 130px;">
                        <div class="input-group-btn">
                            <button class="btn btn-primary btn-minus" 
                                    <%= !productStatus.isAvailable || productStatus.currentStock === 0 ? 'disabled' : '' %>>
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                        <input type="text" 
                               name="quantity" 
                               class="form-control bg-secondary border-0 text-center" 
                               value="1"
                               min="1"
                               max="<%= productStatus.maxAllowed %>"
                               <%= !productStatus.isAvailable || productStatus.currentStock === 0 ? 'disabled' : '' %>>
                        <div class="input-group-btn">
                            <button class="btn btn-primary btn-plus"
                                    <%= !productStatus.isAvailable || productStatus.currentStock === 0 ? 'disabled' : '' %>>
                                <i class="fa fa-plus"></i>
                            </button>
                        </div>
                    </div>
                    
                    <button class="btn px-3 <%= productStatus.isAvailable && productStatus.currentStock > 0 ? 'btn-primary' : 'btn-danger' %> btn-add-to-cart"
                            <%= !productStatus.isAvailable || productStatus.currentStock === 0 ? 'disabled' : '' %>>
                        <i class="fa fa-shopping-cart mr-1"></i> 
                        <% if (productStatus.isBlocked) { %>
                            Product Discontinued
                        <% } else if (productStatus.currentStock === 0) { %>
                            Out of Stock
                        <% } else if (!productStatus.isAvailable) { %>
                            Not Available
                        <% } else { %>
                            Add To Cart
                        <% } %>
                    </button>
                
                    <button class="btn <%= productStatus.isBlocked ? 'btn-danger' : 'btn-primary' %> px-3 ml-3 wishlist-toggle" 
                            data-product-id="<%= product._id %>"
                            <%= productStatus.isBlocked ? 'disabled' : '' %>>
                        <i class="<%= isInWishlist ? 'fas' : 'far' %> fa-heart mr-2"></i> 
                        <% if (productStatus.isBlocked) { %>
                            Product Unavailable
                        <% } else { %>
                            <%= isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist' %>
                        <% } %>
                    </button>
                </div>

                <% if (product.bestOffer > 0) { %>
                    <div class="offer-badge bg-warning text-white px-2 py-1 rounded fw-bold text-uppercase mb-1 mt-1 small mx-auto">
                        <%= product.bestOffer %>% off
                        <% if (product.offerSource === 'category') { %>
                            <span class="offer-source">(Category Offer)</span>
                        <% } else { %>
                            <span class="offer-source">(Product Offer)</span>
                        <% } %>
                    </div>
                <% } %>

                <div class="d-flex pt-2">
                    <strong class="text-dark mr-2">Share on:</strong>
                    <div class="d-inline-flex">
                        <a class="text-dark px-2" href=""><i class="fab fa-facebook-f"></i></a>
                        <a class="text-dark px-2" href=""><i class="fab fa-twitter"></i></a>
                        <a class="text-dark px-2" href=""><i class="fab fa-linkedin-in"></i></a>
                        <a class="text-dark px-2" href=""><i class="fab fa-pinterest"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row px-xl-5">
        <div class="col">
            <div class="bg-light p-30">
                <div class="nav nav-tabs mb-4">
                    <a class="nav-item nav-link text-dark active" data-toggle="tab" href="#tab-pane-1">Description</a>
                </div>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="tab-pane-1">
                        <h4 class="mb-3">Product Description</h4>
                        <p><%= product.description || 'No description available' %></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Shop Detail End -->

<!-- Products Start -->
<div class="container-fluid pt-5 pb-3">
    <h2 class="section-title position-relative text-uppercase mx-xl-5 mb-4">
        <span class="bg-secondary pr-3">You May Also Like</span>
    </h2>
    <div class="row px-xl-5">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
            <% relatedProducts.forEach(function(relatedProduct) { %>
                <div class="col-lg-3 col-md-4 col-sm-6 pb-1">
                    <div class="product-item bg-light mb-4">
                        <div class="product-img position-relative overflow-hidden">
                            <img class="img-fluid w-100" 
                                 src="<%= relatedProduct.productImage && relatedProduct.productImage.length > 0 
                                        ? `/uploads/products/${relatedProduct.productImage[0]}` 
                                        : '/images/placeholder.jpg' %>" 
                                 alt="<%= relatedProduct.productName %>">
                            <div class="product-action">
                                <a class="btn btn-outline-dark btn-square add-to-cart-link" href="#" data-product-id="<%= relatedProduct._id %>">
                                    <i class="fa fa-shopping-cart"></i>
                                </a>
                                <a class="btn btn-outline-dark btn-square" href="/wishlist/<%= relatedProduct._id %>">
                                    <i class="far fa-heart"></i>
                                </a>
                                <a class="btn btn-outline-dark btn-square" href="/product/<%= relatedProduct._id %>">
                                    <i class="fa fa-search"></i>
                                </a>
                            </div>
                        </div>
                        <div class="text-center py-4 px-4">
                            <a class="product-name h4 fw-bold text-decoration-none text-dark d-block text-truncate mb-2" 
                               href="/productdetails/<%= relatedProduct._id %>">
                                <strong><%= relatedProduct.productName %></strong>
                            </a>
                            <div class="d-flex align-items-center justify-content-center mt-2">
                                <h5 class="fw-bold mb-0">₹<%= relatedProduct.salePrice %></h5>
                            </div>
                            <div class="d-flex align-items-center justify-content-center mt-2">
                                <h6 style="text-decoration: line-through; text-decoration-color: red; font-size: 1rem; color: gray;">
                                    ₹<%= relatedProduct.regularPrice %>
                                </h6>
                            </div>
                            <% if (relatedProduct.bestOffer > 0) { %>
                                <div class="offer-badge bg-warning text-white px-2 py-1 rounded fw-bold text-uppercase mb-1 mt-1 small mx-auto">
                                    <%= relatedProduct.bestOffer %>% off
                                    <% if (relatedProduct.offerSource === 'category') { %>
                                        <span class="offer-source">(Category Offer)</span>
                                    <% } else { %>
                                        <span class="offer-source">(Product Offer)</span>
                                    <% } %>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="col-12 text-center">
                <p>No related products found</p>
            </div>
        <% } %>
    </div>
</div>
<!-- Products End -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
    const addToCartBtn = document.querySelector('.btn-add-to-cart');
    const quantityInput = document.querySelector('input[name="quantity"]');
    const minusBtn = document.querySelector('.btn-minus');
    const plusBtn = document.querySelector('.btn-plus');
    const isLoggedIn = <%= user ? 'true' : 'false' %>;

    const productStatus = {
        isAvailable: <%= productStatus.isAvailable %>,
        currentStock: <%= productStatus.currentStock %>,
        maxAllowed: <%= productStatus.maxAllowed %>,
        isBlocked: <%= productStatus.isBlocked %>
    };

    function showAlert(options) {
        return Swal.fire({
            icon: options.icon || 'info',
            title: options.title || '',
            text: options.text || '',
            position: 'center',
            showConfirmButton: options.showConfirmButton !== false,
            confirmButtonText: options.confirmButtonText || 'OK',
            timer: options.timer || null,
            timerProgressBar: options.timer ? true : false,
            customClass: {
                popup: 'custom-swal-popup',
                title: 'custom-swal-title',
                content: 'custom-swal-content'
            }
        });
    }

    function validateQuantity(value) {
        const qty = parseInt(value);
        if (isNaN(qty) || qty < 1) return 1;
        if (qty > productStatus.currentStock) return productStatus.currentStock;
        if (qty > 5) return 5;
        return qty;
    }

    minusBtn.addEventListener('click', () => {
        let currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) quantityInput.value = currentValue - 1;
        else showAlert({ icon: 'warning', title: 'Minimum Quantity', text: 'Quantity cannot be less than 1', timer: 2000 });
    });

    plusBtn.addEventListener('click', () => {
        let currentValue = parseInt(quantityInput.value);
        const newValue = currentValue + 1;
        if (newValue > productStatus.currentStock || newValue > 5) {
            showAlert({
                icon: 'warning',
                title: newValue > productStatus.currentStock ? 'Limited Stock' : 'Maximum Limit',
                text: newValue > productStatus.currentStock ? `Only ${productStatus.currentStock} units available` : 'Maximum 5 units allowed',
                showConfirmButton: true
            });
            return;
        }
        quantityInput.value = newValue;
    });

    quantityInput.addEventListener('input', (e) => {
        const value = e.target.value.replace(/[^\d]/g, '');
        e.target.value = validateQuantity(value);
    });

    quantityInput.addEventListener('blur', (e) => {
        if (!e.target.value || parseInt(e.target.value) < 1) e.target.value = '1';
        else e.target.value = validateQuantity(e.target.value);
    });

    addToCartBtn.addEventListener('click', async () => {
        if (!isLoggedIn) {
            const result = await showAlert({
                icon: 'warning',
                title: 'Login Required',
                text: 'Please login to add items to cart',
                showConfirmButton: true,
                confirmButtonText: 'Login Now',
                showCancelButton: true
            });
            if (result.isConfirmed) {
                sessionStorage.setItem('returnTo', window.location.href);
                window.location.href = '/signin';
            }
            return;
        }

        if (!productStatus.isAvailable || productStatus.currentStock === 0) {
            showAlert({
                icon: 'error',
                title: productStatus.currentStock === 0 ? 'Out of Stock' : 'Not Available',
                text: 'This product is currently unavailable',
                showConfirmButton: true
            });
            return;
        }

        const quantity = validateQuantity(quantityInput.value);
        try {
            const response = await fetch('/add-to-cart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId: '<%= product._id %>', quantity })
            });
            const data = await response.json();

            if (response.ok) {
                showAlert({
                    icon: 'success',
                    title: 'Added to Cart!',
                    text: `Added ${quantity} units to cart`,
                    timer: 2000
                });
                if (typeof updateCartCount === 'function') updateCartCount();
            } else {
                showAlert({ icon: 'error', title: 'Error', text: data.message || 'Failed to add to cart' });
            }
        } catch (error) {
            showAlert({ icon: 'error', title: 'Error', text: 'An error occurred while adding to cart' });
        }
    });

    document.querySelectorAll('.add-to-cart-link').forEach(btn => {
        btn.addEventListener('click', async (e) => {
            e.preventDefault();
            const productId = btn.getAttribute('data-product-id');

            if (!isLoggedIn) {
                const result = await showAlert({
                    icon: 'warning',
                    title: 'Login Required',
                    text: 'Please login to add items to cart',
                    showConfirmButton: true,
                    confirmButtonText: 'Login Now',
                    showCancelButton: true
                });
                if (result.isConfirmed) {
                    sessionStorage.setItem('returnTo', window.location.href);
                    window.location.href = '/signin';
                }
                return;
            }

            try {
                const response = await fetch('/add-to-cart', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId, quantity: 1 })
                });
                const data = await response.json();

                if (response.ok) {
                    showAlert({
                        icon: 'success',
                        title: 'Added to Cart!',
                        text: 'Product added to cart successfully',
                        timer: 2000
                    });
                    if (typeof updateCartCount === 'function') updateCartCount();
                } else {
                    showAlert({ icon: 'error', title: 'Error', text: data.message || 'Failed to add to cart' });
                }
            } catch (error) {
                showAlert({ icon: 'error', title: 'Error', text: 'An error occurred while adding to cart' });
            }
        });
    });

    const wishlistBtn = document.querySelector('.wishlist-toggle');
    if (wishlistBtn) {
        wishlistBtn.addEventListener('click', async (e) => {
            e.preventDefault();
            if (!isLoggedIn) {
                const result = await showAlert({
                    icon: 'warning',
                    title: 'Login Required',
                    text: 'Please login to manage wishlist',
                    showConfirmButton: true,
                    confirmButtonText: 'Login Now',
                    showCancelButton: true
                });
                if (result.isConfirmed) {
                    sessionStorage.setItem('returnTo', window.location.href);
                    window.location.href = '/signin';
                }
                return;
            }

            try {
                const response = await fetch('/toggle-wishlist', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId: '<%= product._id %>' })
                });
                const data = await response.json();

                if (response.ok) {
                    const icon = wishlistBtn.querySelector('i');
                    icon.classList.toggle('fas');
                    icon.classList.toggle('far');
                    wishlistBtn.innerHTML = data.inWishlist ? 
                        '<i class="fas fa-heart mr-2"></i> Remove from Wishlist' :
                        '<i class="far fa-heart mr-2"></i> Add to Wishlist';
                    showAlert({ icon: 'success', title: 'Success', text: data.message, timer: 1500 });
                } else {
                    showAlert({ icon: 'error', title: 'Error', text: data.message || 'Failed to update wishlist' });
                }
            } catch (error) {
                showAlert({ icon: 'error', title: 'Error', text: 'Failed to update wishlist' });
            }
        });
    }

    function initializeQuantityInput() {
        quantityInput.value = "1";
        if (!productStatus.isAvailable || productStatus.currentStock === 0) {
            quantityInput.disabled = true;
            minusBtn.disabled = true;
            plusBtn.disabled = true;
            addToCartBtn.disabled = true;
            addToCartBtn.classList.remove('btn-primary');
            addToCartBtn.classList.add('btn-danger');
        }
    }
    initializeQuantityInput();
});
</script>

<!-- Footer Start -->
<%- include("../../views/partials/user/footer") %>

<style>
    .offer-badge {
        display: inline-block;
        width: auto;
        max-width: 90%;
        margin: 5px auto;
        font-size: 0.75rem;
    }
    .offer-source {
        font-size: 0.65rem;
        opacity: 0.9;
    }
    .custom-swal-popup {
        font-size: 1.1rem;
        padding: 20px;
        border-radius: 15px;
    }
    .custom-swal-title {
        font-size: 1.4rem;
        font-weight: 600;
        color: #333;
        margin-bottom: 10px;
    }
    .custom-swal-content {
        font-size: 1.1rem;
        color: #666;
    }
    .swal2-confirm {
        background-color: #007bff !important;
        border-color: #007bff !important;
        padding: 8px 20px !important;
    }
    .swal2-cancel {
        background-color: #6c757d !important;
        border-color: #6c757d !important;
        padding: 8px 20px !important;
    }
    .swal2-popup {
        width: auto !important;
        min-width: 320px !important;
        max-width: 400px !important;
    }
</style>