<%- include("../../views/partials/user/header") %>
<script src="https://cdn.tailwindcss.com"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container-fluid">
  <div class="row px-3 sm:px-5 md:px-xl-5">
      <div class="col-12">
          <nav class="breadcrumb bg-light mb-4 sm:mb-6 lg:mb-8 p-3 rounded">
              <a class="breadcrumb-item text-dark" href="/">Home</a>
              <a class="breadcrumb-item text-dark" href="/profile">Profile</a>
              <span class="breadcrumb-item active">My wishlist</span>
          </nav>
      </div>
  </div>
</div>

<!-- Main Content -->
<main class="w-full px-3 sm:px-6 lg:px-8 animate__animated animate__fadeIn">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-6">
        <!-- Include Profile Sidebar - Full width on mobile, sidebar on larger screens -->
        <div class="lg:col-span-3">
            <%- include("../partials/user/profileSidebar", { currentPage: 'wishlist' }) %>
        </div>

        <!-- Wishlist Content -->
        <div class="lg:col-span-9 space-y-6">
            <!-- Container -->
            <div class="bg-white rounded-lg shadow-lg p-4 sm:p-6">
                <!-- Wishlist Heading -->
                <h1 class="text-xl sm:text-2xl font-bold mb-4 sm:mb-6 flex items-center">
                    My Wishlist
                </h1>

                <!-- Wishlist Table -->
                <% if (wishlist && wishlist.length > 0) { %>
                    <!-- Desktop version (hidden on small screens) -->
                    <div class="hidden md:block bg-white shadow-md rounded-lg">
                        <table class="min-w-full text-left border-collapse">
                            <thead>
                                <tr class="border-b">
                                    <th class="p-4 text-sm font-medium text-gray-600"> </th>
                                    <th class="p-4 text-sm font-medium text-gray-600">Product Name</th>
                                    <th class="p-4 text-sm font-medium text-gray-600">Unit Price</th>
                                    <th class="p-4 text-sm font-medium text-gray-600">Stock Status</th>
                                    <th class="p-4 text-sm font-medium text-gray-600">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% wishlist.forEach(product => { 
                                    // Determine stock status and availability
                                    let stockStatus = 'Out of Stock';
                                    let stockClass = 'text-red-500';
                                    let isAvailable = false;
        
                                    if (product.quantity > 0 && !product.isBlocked) {
                                        stockStatus = 'In Stock';
                                        stockClass = 'text-green-500';
                                        isAvailable = true;
                                    } else if (product.isBlocked) {
                                        stockStatus = 'Unavailable';
                                        stockClass = 'text-gray-500';
                                    }
                                %>
                                    <tr class="border-b">
                                        <td class="p-4">
                                            <button class="remove-wishlist text-yellow-500 hover:text-yellow-600" data-product-id="<%= product._id %>">✖</button>
                                        </td>
                                        <td class="p-4 flex items-center space-x-4">
                                            <img src="/uploads/products/<%= product.productImage[0] %>" alt="<%= product.productName %>" class="w-16 h-16 object-cover rounded">
                                            <span class="font-medium"><%= product.productName %></span>
                                        </td>
                                        <td class="p-4">
                                            <span class="font-bold">&#8377;<%= product.salePrice %></span>
                                        </td>
                                        <td class="p-4 <%= stockClass %>"><%= stockStatus %></td>
                                        <td class="p-4">
                                            <% if (isAvailable) { %>
                                                <button class="add-to-cart bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600" data-product-id="<%= product._id %>">Add to Cart</button>
                                            <% } else { %>
                                                <button disabled class="bg-gray-300 text-gray-500 py-2 px-4 rounded cursor-not-allowed">Unavailable</button>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>

                    <!-- Mobile version (card layout, shown only on small screens) -->
                    <div class="md:hidden space-y-4">
                        <% wishlist.forEach(product => { 
                            // Determine stock status and availability
                            let stockStatus = 'Out of Stock';
                            let stockClass = 'text-red-500';
                            let isAvailable = false;

                            if (product.quantity > 0 && !product.isBlocked) {
                                stockStatus = 'In Stock';
                                stockClass = 'text-green-500';
                                isAvailable = true;
                            } else if (product.isBlocked) {
                                stockStatus = 'Unavailable';
                                stockClass = 'text-gray-500';
                            }
                        %>
                            <div class="border rounded-lg p-4 relative">
                                <button class="remove-wishlist absolute top-2 right-2 text-yellow-500 hover:text-yellow-600 text-xl" data-product-id="<%= product._id %>">✖</button>
                                
                                <div class="flex items-start space-x-3 mb-3">
                                    <img src="/uploads/products/<%= product.productImage[0] %>" alt="<%= product.productName %>" class="w-20 h-20 object-cover rounded">
                                    <div>
                                        <h3 class="font-medium text-sm sm:text-base"><%= product.productName %></h3>
                                        <p class="font-bold mt-1">&#8377;<%= product.salePrice %></p>
                                        <p class="<%= stockClass %> text-sm mt-1"><%= stockStatus %></p>
                                    </div>
                                </div>
                                
                                <div class="mt-3">
                                    <% if (isAvailable) { %>
                                        <button class="add-to-cart w-full bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600" data-product-id="<%= product._id %>">Add to Cart</button>
                                    <% } else { %>
                                        <button disabled class="w-full bg-gray-300 text-gray-500 py-2 px-4 rounded cursor-not-allowed">Unavailable</button>
                                    <% } %>
                                </div>
                            </div>
                        <% }) %>
                    </div>

                    <!-- Pagination Controls -->
                    <div class="flex flex-col sm:flex-row items-center justify-between px-4 py-3 border-t gap-4">
                        <div class="text-center sm:text-left">
                            <p class="text-xs sm:text-sm text-gray-700">
                                Showing
                                <span class="font-medium"><%= (pagination.currentPage - 1) * pagination.limit + 1 %></span>
                                to
                                <span class="font-medium">
                                    <%= Math.min(pagination.currentPage * pagination.limit, pagination.totalItems) %>
                                </span>
                                of
                                <span class="font-medium"><%= pagination.totalItems %></span>
                                results
                            </p>
                        </div>
                        
                        <div class="flex flex-wrap justify-center items-center gap-2">
                            <% if (pagination.hasPrevPage) { %>
                                <a href="?page=<%= pagination.currentPage - 1 %>" 
                                    class="px-3 py-1 text-sm bg-white border rounded-md hover:bg-gray-100">
                                    Previous
                                </a>
                            <% } %>
                            
                            <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                                <a href="?page=<%= i %>"
                                    class="px-3 py-1 text-sm <%= pagination.currentPage === i ? 'bg-yellow-500 text-white' : 'bg-white' %> border rounded-md hover:bg-yellow-100">
                                    <%= i %>
                                </a>
                            <% } %>
                            
                            <% if (pagination.hasNextPage) { %>
                                <a href="?page=<%= pagination.currentPage + 1 %>"
                                    class="px-3 py-1 text-sm bg-white border rounded-md hover:bg-gray-100">
                                    Next
                                </a>
                            <% } %>
                        </div>
                    </div>
                <% } else { %>
                    <!-- Empty Wishlist State -->
                    <div class="flex flex-col items-center justify-center bg-white shadow-md rounded-lg p-6 sm:p-10">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-16 sm:h-24 w-16 sm:w-24 text-gray-300 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                        </svg>
                        <h2 class="text-lg sm:text-xl font-semibold text-gray-600 mb-2">Your Wishlist is Empty</h2>
                        <p class="text-gray-500 mb-6 text-center text-sm sm:text-base">Looks like you haven't added any items to your wishlist yet.</p>
                        <a href="/shop" class="bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600">
                            Continue Shopping
                        </a>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</main>

<!-- JavaScript -->
<script>
document.addEventListener('DOMContentLoaded', () => {
    // Remove from Wishlist
    document.querySelectorAll('.remove-wishlist').forEach((button) => {
      button.addEventListener('click', async (event) => {
        const productId = event.target.dataset.productId;
        
        Swal.fire({
            title: 'Are you sure?',
            text: 'Do you really want to remove this product from your wishlist?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'No, keep it'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/wishlist/${productId}`, {
                        method: 'DELETE',
                    });
                    
                    if (response.ok) {
                        // Show success message
                        Swal.fire({
                            icon: 'success',
                            title: 'Removed!',
                            text: 'Product has been removed from your wishlist.',
                            showConfirmButton: false,
                            timer: 1500
                        });

                        setTimeout(() => {
                            location.reload();  
                        }, 1500);
                    } else {
                        const result = await response.json();
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: result.message || 'Failed to remove product',
                        });
                    }
                } catch (error) {
                    console.error('Error removing from wishlist:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while removing the product',
                    });
                }
            }
        });
      });
    });

    // Add to Cart functionality
    document.querySelectorAll('.add-to-cart').forEach((button) => {
      button.addEventListener('click', async (event) => {
        const productId = event.target.dataset.productId;
        try {
          const response = await fetch('/add-to-cart', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
          });
          
          const result = await response.json();
          if (response.ok) {
            Swal.fire({
              icon: 'success',
              title: 'Added to Cart!',
              text: 'The item has been added to your cart.',
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: result.message || 'Failed to add item to cart',
            });
          }
        } catch (error) {
          console.error('Error adding to cart:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while adding the item to cart',
          });
        }
      });
    });
  });
</script>

<%- include("../../views/partials/user/footer") %>