<%- include('../../views/partials/user/header') %>

<!-- Add required scripts and styles -->
<script src="https://cdn.tailwindcss.com"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<!-- Breadcrumb Start -->
<div class="container-fluid bg-secondary mb-5">
    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 120px">
        <h1 class="font-weight-semi-bold text-uppercase mb-3">Order Details</h1>
        <div class="d-inline-flex">
            <p class="m-0"><a href="/">Home</a></p>
            <p class="m-0 px-2">-</p>
            <p class="m-0"><a href="/orders">Orders</a></p>
            <p class="m-0 px-2">-</p>
            <p class="m-0">Details</p>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->

<div class="container mx-auto px-4 py-8">
    <div class="max-w-5xl mx-auto">
        <!-- Order Header Card -->
        <div class="bg-white rounded-xl shadow-lg p-6 mb-8 border border-gray-100">
            <div class="flex flex-wrap justify-between items-start mb-6">
                <div class="space-y-2">
                    <h1 class="text-2xl font-bold text-gray-800">Order #<%= order._id %></h1>
                    <p class="text-gray-600 flex items-center">
                        <i class="far fa-calendar-alt mr-2"></i>
                        Placed on <%= new Date(order.createdAt).toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit'
                        }) %>
                    </p>
                </div>
                <div class="text-right mt-4 sm:mt-0">
                    <div class="flex flex-wrap gap-2 justify-end">
                        <span class="px-4 py-2 rounded-full text-sm font-medium
                            <%= order.orderStatus === 'Processing' ? 'bg-blue-100 text-blue-800' :
                                order.orderStatus === 'Shipped' ? 'bg-yellow-100 text-yellow-800' :
                                order.orderStatus === 'Delivered' ? 'bg-green-100 text-green-800' :
                                order.orderStatus === 'Cancelled' ? 'bg-red-100 text-red-800' :
                                order.orderStatus === 'Payment Failed' ? 'bg-red-100 text-red-800' :
                                'bg-gray-100 text-gray-800' %>">
                            <i class="fas <%= 
                                order.orderStatus === 'Processing' ? 'fa-cog fa-spin' :
                                order.orderStatus === 'Shipped' ? 'fa-shipping-fast' :
                                order.orderStatus === 'Delivered' ? 'fa-check-circle' :
                                order.orderStatus === 'Cancelled' ? 'fa-times-circle' :
                                order.orderStatus === 'Payment Failed' ? 'fa-exclamation-circle' :
                                'fa-clock' %> mr-2"></i>
                            <%= order.orderStatus %>
                        </span>
                        <span class="px-4 py-2 rounded-full text-sm font-medium
                            <%= order.paymentStatus === 'Paid' ? 'bg-green-100 text-green-800' :
                                order.paymentStatus === 'Failed' ? 'bg-red-100 text-red-800' :
                                'bg-gray-100 text-gray-800' %>">
                            <i class="fas <%= 
                                order.paymentStatus === 'Paid' ? 'fa-check-circle' :
                                order.paymentStatus === 'Failed' ? 'fa-times-circle' :
                                'fa-clock' %> mr-2"></i>
                            <%= order.paymentStatus %>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Order Timeline -->
            <div class="border-t border-b border-gray-100 py-8 mb-6">
                <div class="flex justify-between relative">
                    <!-- Progress Line -->
                    <div class="absolute top-4 left-0 right-0 h-1 bg-gray-200">
                        <div class="h-full bg-green-500" style="width: <%= 
                            timeline.delivered.status ? '100%' :
                            timeline.shipped.status ? '75%' :
                            timeline.processing.status ? '50%' :
                            '25%' %>"></div>
                    </div>

                    <!-- Timeline Points -->
                    <% const timelinePoints = [
                        { 
                            icon: 'fa-shopping-cart',
                            label: 'Ordered',
                            status: timeline.ordered.status,
                            date: timeline.ordered.date
                        },
                        {
                            icon: 'fa-cog',
                            label: 'Processing',
                            status: timeline.processing.status,
                            date: timeline.processing.date
                        },
                        {
                            icon: 'fa-shipping-fast',
                            label: 'Shipped',
                            status: timeline.shipped.status,
                            date: timeline.shipped.date
                        },
                        {
                            icon: 'fa-home',
                            label: 'Delivered',
                            status: timeline.delivered.status,
                            date: timeline.delivered.date
                        }
                    ] %>

                    <% timelinePoints.forEach(point => { %>
                        <div class="flex flex-col items-center relative z-10">
                            <div class="w-10 h-10 <%= point.status ? 'bg-green-500' : 'bg-gray-300' %> 
                                        rounded-full flex items-center justify-center text-white shadow-lg
                                        <%= point.status ? 'animate-pulse' : '' %>">
                                <i class="fas <%= point.icon %>"></i>
                            </div>
                            <p class="mt-3 text-sm font-medium text-gray-800"><%= point.label %></p>
                            <p class="text-xs text-gray-500">
                                <%= point.date ? new Date(point.date).toLocaleDateString() : 'Pending' %>
                            </p>
                        </div>
                    <% }) %>
                </div>
            </div>

            <!-- Order Items -->
            <div class="bg-gray-50 rounded-xl overflow-hidden mb-6">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead class="bg-gray-100">
                            <tr>
                                <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Product</th>
                                <th class="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">Price</th>
                                <th class="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">Quantity</th>
                                <th class="px-6 py-4 text-right text-xs font-semibold text-gray-600 uppercase tracking-wider">Total</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200 bg-white">
                            <% order.items.forEach(function(item) { %>
                                <tr class="hover:bg-gray-50 transition-colors">
                                    <td class="px-6 py-4">
                                        <div class="flex items-center">
                                            <% if (item.product && item.product.productImage && item.product.productImage.length > 0) { %>
                                                <img src="/uploads/products/<%= item.product.productImage[0] %>" 
                                                     alt="<%= item.product.productName %>"
                                                     class="w-16 h-16 object-cover rounded-lg shadow"
                                                     onerror="this.src='/img/default-product.jpg'">
                                            <% } else { %>
                                                <div class="w-16 h-16 bg-gray-200 rounded-lg flex items-center justify-center">
                                                    <i class="fas fa-image text-gray-400 text-2xl"></i>
                                                </div>
                                            <% } %>
                                            <div class="ml-4">
                                                <p class="text-sm font-medium text-gray-900">
                                                    <%= item.product ? item.product.productName : 'Product Not Available' %>
                                                </p>
                                                <% if (item.product && item.product.color) { %>
                                                    <p class="text-xs text-gray-500">
                                                        Color: <%= item.product.color %>
                                                    </p>
                                                <% } %>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 text-right text-sm text-gray-500">
                                        ₹<%= item.price.toFixed(2) %>
                                    </td>
                                    <td class="px-6 py-4 text-right text-sm text-gray-500">
                                        <%= item.quantity %>
                                    </td>
                                    <td class="px-6 py-4 text-right text-sm font-medium text-gray-900">
                                        ₹<%= (item.price * item.quantity).toFixed(2) %>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Order Details Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            <!-- Shipping Address -->
            <div class="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                <h2 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                    <i class="fas fa-shipping-fast mr-2 text-yellow-500"></i>
                    Shipping Address
                </h2>
                <div class="space-y-3">
                    <% if (order.shippingAddress) { %>
                        <p class="font-medium text-gray-800">
                            <%= order.shippingAddress.name %>
                        </p>
                        <p class="text-gray-600">
                            <%= order.shippingAddress.street %>
                        </p>
                        <% if (order.shippingAddress.landMark) { %>
                            <p class="text-gray-600">
                                <i class="fas fa-map-marker-alt mr-2 text-yellow-500"></i>
                                <%= order.shippingAddress.landMark %>
                            </p>
                        <% } %>
                        <p class="text-gray-600">
                            <%= order.shippingAddress.city %>
                        </p>
                        <p class="text-gray-600">
                            <%= order.shippingAddress.postalCode %>
                        </p>
                        <p class="flex items-center text-gray-600">
                            <i class="fas fa-phone-alt mr-2 text-yellow-500"></i>
                            <%= order.shippingAddress.phone %>
                        </p>
                        <p class="flex items-center text-gray-500 text-sm">
                            <i class="fas fa-tag mr-2 text-yellow-500"></i>
                            <%= order.shippingAddress.addressType %>
                        </p>
                    <% } else { %>
                        <div class="text-center py-4">
                            <i class="fas fa-home text-gray-300 text-4xl mb-2"></i>
                        <p class="text-gray-500 italic">Address information not available</p>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Payment Details -->
            <div class="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                <h2 class="text-lg font-semibold text-gray-800 mb-4 flex items-center">
                    <i class="fas fa-receipt mr-2 text-yellow-500"></i>
                    Order Summary
                </h2>
                <div class="space-y-4">
                    <div class="flex justify-between items-center">
                        <span class="text-gray-600">Subtotal</span>
                        <span class="font-medium">₹<%= order.subtotal.toFixed(2) %></span>
                    </div>
                    <div class="flex justify-between items-center">
                        <span class="text-gray-600">Shipping</span>
                        <span class="font-medium">₹<%= order.shippingCost.toFixed(2) %></span>
                    </div>
                    <% if (order.discountAmount > 0) { %>
                        <div class="flex justify-between items-center text-green-600">
                            <span>Discount</span>
                            <span class="font-medium">-₹<%= order.discountAmount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <div class="flex justify-between items-center pt-4 border-t border-gray-100">
                        <span class="text-lg font-semibold text-gray-800">Total</span>
                        <span class="text-lg font-bold text-yellow-500">₹<%= order.total.toFixed(2) %></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Payment Failed Actions -->
        <% if (order.orderStatus === 'Payment Failed' || order.paymentStatus === 'Failed') { %>
            <div class="bg-white rounded-xl shadow-lg p-6 border border-gray-100">
                <div class="bg-red-50 rounded-xl p-6 border border-red-100">
                    <div class="flex items-center mb-4">
                        <i class="fas fa-exclamation-circle text-red-500 text-xl mr-3"></i>
                        <div>
                            <h3 class="text-red-800 font-semibold">Payment Failed</h3>
                            <% if (order.paymentDetails && order.paymentDetails.error) { %>
                                <p class="text-sm text-red-600 mt-1">
                                    <%= order.paymentDetails.error %>
                                </p>
                            <% } %>
                        </div>
                    </div>
                    <div class="flex gap-4">
                        <button onclick="retryPayment('<%= order._id %>')" 
                                class="flex-1 px-6 py-3 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 
                                       transition-colors flex items-center justify-center font-medium">
                            <i class="fas fa-redo mr-2"></i>
                            Retry Payment
                        </button>
                        <button onclick="abortOrder('<%= order._id %>')"
                                class="flex-1 px-6 py-3 bg-red-500 text-white rounded-lg hover:bg-red-600 
                                       transition-colors flex items-center justify-center font-medium">
                            <i class="fas fa-times mr-2"></i>
                            Cancel Order
                        </button>
                    </div>
                </div>
            </div>
        <% } %>
    </div>
</div>

<!-- Include the payment handling scripts -->
<script>
    // Copy these functions from ordermanagement.ejs
    async function retryPayment(orderId) {
        try {
            const result = await Swal.fire({
                title: 'Retry Payment?',
                text: "You will be redirected to the payment gateway",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#EAB308',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, retry payment'
            });

            if (result.isConfirmed) {
                const loadingAlert = Swal.fire({
                    title: 'Processing',
                    text: 'Initiating payment...',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                const response = await fetch(`/orders/${orderId}/retry-payment`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();
                loadingAlert.close();

                if (!data.success) {
                    throw new Error(data.message);
                }

                // Initialize Razorpay
                const options = {
                    key: data.key_id,
                    amount: data.order.amount,
                    currency: data.order.currency,
                    name: 'Your Store',
                    description: 'Order Payment Retry',
                    order_id: data.order.id,
                    handler: async function(response) {
                        try {
                            const verifyResponse = await fetch(`/orders/${orderId}/verify-retry-payment`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(response)
                            });

                            const result = await verifyResponse.json();
                            if (result.success) {
                                await Swal.fire({
                                    icon: 'success',
                                    title: 'Payment Successful',
                                    text: 'Your payment has been processed successfully',
                                    confirmButtonColor: '#EAB308'
                                });
                                window.location.reload();
                            } else {
                                throw new Error(result.message);
                            }
                        } catch (error) {
                            console.error('Payment verification error:', error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Failed',
                                text: error.message || 'Failed to verify payment',
                                confirmButtonColor: '#EAB308'
                            });
                        }
                    },
                    modal: {
                        ondismiss: function() {
                            Swal.fire({
                                icon: 'warning',
                                title: 'Payment Cancelled',
                                text: 'You cancelled the payment retry',
                                confirmButtonColor: '#EAB308'
                            });
                        }
                    },
                    prefill: {
                        name: '<%= user.name %>',
                        email: '<%= user.email %>'
                    },
                    theme: {
                        color: "#EAB308"
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();

            }
        } catch (error) {
            console.error('Retry payment error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to retry payment',
                confirmButtonColor: '#EAB308'
            });
        }
    }

    async function abortOrder(orderId) {
        try {
            const result = await Swal.fire({
                title: 'Cancel Order?',
                text: "Are you sure you want to cancel this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#EAB308',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!'
            });

            if (result.isConfirmed) {
                const loadingAlert = Swal.fire({
                    title: 'Processing',
                    text: 'Cancelling your order...',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                const response = await fetch(`/orders/${orderId}/abort`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();
                loadingAlert.close();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Order Cancelled',
                        text: 'Your order has been cancelled successfully',
                        confirmButtonColor: '#EAB308'
                    });
                    window.location.reload();
                } else {
                    throw new Error(data.message);
                }
            }
        } catch (error) {
            console.error('Abort order error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to cancel order',
                confirmButtonColor: '#EAB308'
            });
        }
    }
</script>

<%- include('../../views/partials/user/footer') %> 