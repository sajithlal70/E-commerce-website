<%- include("../../views/partials/admin/header") %>
<script src="https://cdn.tailwindcss.com"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-6">Order Details</h1>

        <div class="bg-white p-6 rounded-lg shadow">
            <!-- Order Information -->
            <div class="mb-6">
                <h2 class="text-2xl font-semibold text-gray-800">Order #<%= order._id %></h2><br>
                <h3 class="text-xl font-semibold mb-4">Order Details</h3>
                <p class="mt-2 text-gray-600">Order Date: <%= new Date(order.createdAt).toLocaleDateString() %></p>
                <p class="mt-2 text-gray-600">Customer: <%= order.user.name %></p>
                <p><span class="font-medium">Phone:</span> <%= order.shippingAddress.phone %></p>
                <p><span class="font-medium">Address:</span><br>
                  <%= order.shippingAddress.street %><br>
                  <%= order.shippingAddress.city %> <%= order.shippingAddress.postalCode %><br>
                  <%= order.shippingAddress.landMark %>
                </p>
                <p class="mt-2 text-gray-600">Order Status: <span class="font-semibold"><%= order.orderStatus %></span></p><br>
                <h4 class="text-xl font-semibold mb-4">Payment Details</h4>
                <p><span class="font-medium">Payment Method:</span> <%= order.paymentMethod.toUpperCase() %></p>
                 <p><span class="font-medium">Payment Status:</span> 
                  <span class="px-2 py-1 text-sm rounded-full 
                    <%= order.paymentStatus === 'Paid' ? 'bg-green-100 text-green-800' :
                        order.paymentStatus === 'Failed' ? 'bg-red-100 text-red-800' :
                        'bg-yellow-100 text-yellow-800' %>">
                    <%= order.paymentStatus %>
                  </span>
                </p>
            </div>
            <div class="mb-6">
                <h4 class="text-xl font-semibold mb-4">Discount Details</h4>
                <% if (order.coupon) { %>
                    <div class="bg-green-50 p-4 rounded-md">
                        <p><span class="font-medium">Applied Coupon:</span> <%= order.coupon.code %></p>
                        <p><span class="font-medium">Discount Type:</span> 
                            <%= order.coupon.discountType === 'percentage' ? 'Percentage' : 'Fixed Amount' %>
                        </p>
                        <p><span class="font-medium">Discount Amount:</span> 
                            <span class="text-green-600">-₹<%= order.discountAmount.toFixed(2) %></span>
                        </p>
                    </div>
                <% } else { %>
                    <p class="text-gray-600">No coupon applied to this order</p>
                <% } %>
            </div>

            <!-- Items -->
            <div class="mb-6">
                <h3 class="text-xl font-semibold mb-4">Order Items</h3>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead>
                            <tr>
                                <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product</th>
                                <th class="px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Quantity</th>
                                <th class="px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                                <th class="px-6 py-3 bg-gray-50 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <% order.items.forEach(function(item) { %>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= item.product.productName %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right"><%= item.quantity %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right">₹<%= item.price %></td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 text-right">₹<%= item.price * item.quantity %></td>
                            </tr>
                            <% }); %>
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="3" class="px-6 py-4 text-right font-medium">Subtotal:</td>
                                <td class="px-6 py-4 text-right">₹<%= order.subtotal %></td>
                            </tr>
                            <tr>
                                <td colspan="3" class="px-6 py-4 text-right font-medium">Discount Amount:</td>
                                <td class="px-6 py-4 text-green-600 text-right">-₹<%= order.discountAmount.toFixed(2) %></td>
                            </tr>
                            <tr>
                                <td colspan="3" class="px-6 py-4 text-right font-medium">Shipping:</td>
                                <td class="px-6 py-4 text-right">₹<%= order.shippingCost %></td>
                            </tr>
                            <tr>
                                <td colspan="3" class="px-6 py-4 text-right font-medium">Total:</td>
                                <td class="px-6 py-4 text-right font-bold">₹<%= order.total %></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>

            <!-- Return Request Section (if applicable) -->
            <% if (order.orderStatus === 'Return Requested') { %>
              <div class="mb-6 bg-yellow-50 p-4 rounded-lg">
                  <h3 class="text-xl font-semibold mb-4">Return Request</h3>
                  <p class="mb-2"><strong>Reason:</strong> <%= order.returnDetails.reason %></p>
                  <p class="mb-2"><strong>Customer Comments:</strong> <%= order.returnDetails.comments %></p>
                  <p class="mb-4"><strong>Request Date:</strong> <%= new Date(order.returnDetails.date).toLocaleDateString() %></p>
                  
                  <form id="returnForm" class="space-y-4">
                      <div>
                          <label class="block text-sm font-medium text-gray-700">Admin Comments</label>
                          <textarea name="adminComments" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" rows="3"></textarea>
                      </div>
                      <div class="flex space-x-4">
                          <button type="button" onclick="handleReturn('Approved')" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600">
                              Approve Return
                          </button>
                          <button type="button" onclick="handleReturn('Rejected')" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
                              Reject Return
                          </button>
                      </div>
                  </form>
              </div>
              <% } %>

            <!-- Status Update Form -->
            <% if (!['Returned', 'Cancelled'].includes(order.orderStatus)) { %>
              <form id="statusUpdateForm" action="/admin/order/<%= order._id %>/update-status" method="POST" class="mt-6" onsubmit="return handleStatusUpdate(event)">
                  <div class="flex items-center space-x-4">
                      <select name="orderStatus" class="rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
                          <option value="Pending" <%= order.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                          <option value="Pending" <%= order.orderStatus === 'Return Requested' ? 'selected' : '' %>>Return Requested</option>
                          <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                          <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                          <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                      </select>
                      <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                          Update Status
                      </button>
                  </div>
              </form>
              <% } %>
        </div>
    </div>

    <script>

        function showLoading(message) {
            return Swal.fire({
                title: message,
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
        }

        async function handleStatusUpdate(event) {
            event.preventDefault();
            
            const form = event.target;
            const newStatus = form.orderStatus.value;
            
            // Show confirmation dialog
            const result = await Swal.fire({
                title: 'Confirm Status Update',
                text: `Are you sure you want to update the order status to ${newStatus}?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, update it!',
                cancelButtonText: 'Cancel'
            });

            if (result.isConfirmed) {
                const loadingAlert = showLoading('Updating order status...');
                
                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            orderStatus: newStatus
                        })
                    });

                    if (response.ok) {
                        await Swal.fire({
                            title: 'Success!',
                            text: 'Order status has been updated successfully',
                            icon: 'success'
                        });
                        window.location.reload();
                    } else {
                        throw new Error('Failed to update status');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    await Swal.fire({
                        title: 'Error!',
                        text: 'Failed to update order status',
                        icon: 'error'
                    });
                }
            }
            return false;
        }

        // Function to handle return requests
        async function handleReturn(status) {
            const form = document.getElementById('returnForm');
            const adminComments = form.elements.adminComments.value;

            if (!adminComments.trim()) {
                await Swal.fire({
                    title: 'Error!',
                    text: 'Please provide admin comments before processing the return',
                    icon: 'error'
                });
                return;
            }

            // Show confirmation dialog
            const result = await Swal.fire({
                title: `Confirm Return ${status}`,
                text: `Are you sure you want to ${status.toLowerCase()} this return request?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: `Yes, ${status.toLowerCase()} it!`,
                cancelButtonText: 'Cancel'
            });

            if (result.isConfirmed) {
                const loadingAlert = showLoading('Processing return request...');
                
                try {
                    const response = await fetch(`/admin/order/<%= order._id %>/return`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            status,
                            adminComments
                        })
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        await Swal.fire({
                            title: 'Success!',
                            text: data.message,
                            icon: 'success'
                        });
                        window.location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    await Swal.fire({
                        title: 'Error!',
                        text: error.message || 'Failed to process return request',
                        icon: 'error'
                    });
                }
            }
        }

        // Show success message if redirected after an action
        document.addEventListener('DOMContentLoaded', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const successMessage = urlParams.get('success');
            
            if (successMessage) {
                Swal.fire({
                    title: 'Success!',
                    text: decodeURIComponent(successMessage),
                    icon: 'success'
                });
            }
        });
    </script>
</body>

<%- include("../../views/partials/admin/footer") %>